window.cart=null,window.iwtFetchCart=async function(){try{const t=await fetch("/cart.js");if(!t.ok)throw new Error("Network response was not ok");return window.cart=await t.json(),window.cart}catch(t){return console.error(" Error fetching cart:",t),null}},window.iwtAddToCart=async function({ID:t,quantity:e,template:n}){try{if(!t)return void console.error(" Missing Variant ID. Cannot add to cart.");const o={items:[{id:t,quantity:e,properties:{template:n}}]},r=await fetch("/cart/add.js",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(o)});if(!r.ok)throw new Error(`Network response was not ok, status: ${r.status}`);return window.cart=await r.json(),console.log("Cart Updated After Adding Item:",window.cart),window.cart}catch(t){return console.error(" Error adding to cart:",t),null}},window.iwtUpdateCart=async function(t,e){try{const n=await fetch("/cart/change.js",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({id:t,quantity:e})});if(!n.ok)throw new Error(`Network response was not ok, status: ${n.status}`);return window.cart=await n.json(),window.iwtRenderTable(window.cart),window.cart}catch(t){console.error(" Error updating cart:",t)}},window.iwtRemoveItem=async function(t){try{const e=await fetch("/cart/change.js",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({id:t,quantity:0})});if(!e.ok)throw new Error(`Network response was not ok, status: ${e.status}`);window.cart=await e.json(),window.iwtRenderTable(window.cart)}catch(t){console.error(" Error removing item from cart:",t)}},window.iwtRenderTable=function(t,e=null){if(!t||!t.items)return void console.error(" Cart is empty or missing items.");let n='<table><thead class="table-header"><tr>';const o=["product_title","quantity","price"],r={product_title:"Product Name",quantity:"Units",price:"Price",line_price:"Line Price"};o.forEach((t=>{n+=`<th>${r[t]}</th>`})),n+=`<th>${r.line_price}</th></tr></thead><tbody>`;let i=0;t.items.forEach(((t,e)=>{n+=`<tr style="background-color: ${e%2==0?"#fff":"#f2f2f2"};">`,o.forEach((e=>{if("product_title"===e)n+=`\n                    <td>\n                        <div>${t.product_title}</div>\n                        <div style="font-size: 0.8em; color: #666;">SKU: ${t.sku||"N/A"}</div>\n                    </td>`;else if("quantity"===e)n+=`<td><input type="number" class="iwt-input-number" value="${t[e]}" min="1" onchange="iwtUpdateCart('${t.key}', this.value)" data-line-item-key="${t.key}"></td>`;else{const o="price"===e?iwtFormatPrice(t[e]):t[e];n+=`<td>${o||""}</td>`}}));const r=t.price*t.quantity;i+=r,n+=`<td>${iwtFormatPrice(r)}</td>`,n+=`\n          <td style="background-color: white;">\n            <button class="iwt-remove-item" onclick="iwtRemoveItem('${t.key}')" title="Remove item" style="color: red; font-size: 16px; border: none; background: none;">\n              &cross;\n            </button>\n          </td>\n        `,n+="</tr>"})),n+=`\n      </tbody>\n      <tfoot>\n        <tr style="background-color: #0442b4; color: #fff;">\n          <td colspan="${o.length}">Subtotal</td>\n          <td id="iwt-cart-total">${iwtFormatPrice(i)}</td>\n        </tr>\n    `,null!==e&&(n+=`\n        <tr>\n          <td colspan="${o.length}">Accepted Offer Price</td>\n          <td>${iwtFormatPrice(e)}</td>\n        </tr>\n      `),n+="</tfoot></table>";const a=document.getElementById("iwt-table");a?a.innerHTML=n:console.error("❌ Element with ID iwt-cart-table not found")},window.iwtSyncTableCart=function(){const t=document.getElementById("iwt-qty"),e=document.getElementById("iwt-subtotal");t&&window.cart&&(t.value=window.cart.items.reduce(((t,e)=>t+e.quantity),0)),e&&window.cart&&(e.value=window.cart.total_price)};const iwtGCDT=()=>(new Date).toISOString();window.iwtUpdateCartDates=function(t){const e=iwtGCDT();t&&!window.cartCreateDate&&(window.cartCreateDate=e),window.cartUpdateDate=e};const iwtFormatPrice=t=>`$${(t/100).toFixed(2)}`;console.log("✅ iwt-offer-cart.js Loaded");